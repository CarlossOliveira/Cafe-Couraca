"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xg3f%$4=u21^)m4(13hrs0jameqz61y)9nfm%pq6gdu1^7+r%@'

# SECURITY WARNING: don't run with debug turned on in production!
# Make DEBUG configurable via environment variable for development
DEBUG = True # Set to True for development (Allows many features, one of which is static file serving for the Django admin panel)

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'backend', '0.0.0.0']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api', # Connect the api app to the core project
    'rest_framework', # Django REST framework
    'corsheaders', # CORS headers
    'django_extensions', # Django extensions for development (HTTPS server)
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # CORS deve vir primeiro para garantir que cabeçalhos sejam adicionados em todas as respostas
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Configurações de sessão e cookies
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SECURE = False # O frontend não está a correr com HTTPS
CSRF_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_AGE = 7200  # 2 horas
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expirar sessão quando o browser fecha
SESSION_SAVE_EVERY_REQUEST = True # Salvar sessão a cada request (True) ou apenas quando modificada (False)

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'data' / 'db.sqlite3', # Banco de dados dentro do diretório data
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Django REST Framework configuration:
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.AnonRateThrottle',
    ],
    'DEFAULT_THROTTLE_RATES': {
        'user': '15/minute',  # usuários autenticados
        'anon': '10/minute',  # usuários anônimos
    }
}

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-pt'

TIME_ZONE = 'Europe/Lisbon'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Base URL for static files
STATIC_URL = '/static/'

# Where collectstatic will put files (useful for production or WhiteNoise)
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS Configuration
# Permite requests do frontend (desenvolvimento local e Docker)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Vite em desenvolvimento local
    "http://127.0.0.1:5173",  # Alternativa localhost
    "http://frontend:5173",   # Frontend via Docker Compose
]

# Permitir cookies de sessão entre domínios (necessário para autenticação)
CORS_ALLOW_CREDENTIALS = True

# CSRF Trusted Origins (Necessário para requests autenticadas do painel admin do Django exposto via reverse proxy do frontend)
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:5173',
    'http://127.0.0.1:5173',
    'http://frontend:5173',   # Frontend via Docker Compose
]
